2025-03-18 16:11:18,142 - INFO - Using device: cuda
2025-03-18 16:11:18,143 - INFO - Using best model checkpoint: ./checkpoints\best_model_simple.pth
2025-03-18 16:11:18,294 - INFO - Loaded model from epoch 2
2025-03-18 16:11:18,514 - INFO - Inference completed in 0.2112 seconds
2025-03-18 16:11:18,533 - INFO - Saved output image to output.png
2025-03-18 16:15:49,474 - INFO - Using device: cuda
2025-03-18 16:15:49,474 - INFO - Using best model checkpoint: ./checkpoints\best_model_simple.pth
2025-03-18 16:15:49,627 - INFO - Loaded model from epoch 2
2025-03-18 16:15:49,851 - INFO - Inference completed in 0.2129 seconds
2025-03-18 16:15:49,862 - ERROR - Error during inference: denormalize_from_range() got an unexpected keyword argument 'source_range'
2025-03-18 16:16:49,782 - INFO - Using device: cuda
2025-03-18 16:16:49,782 - INFO - Using best model checkpoint: ./checkpoints\best_model_simple.pth
2025-03-18 16:16:49,924 - INFO - Loaded model from epoch 2
2025-03-18 16:16:50,144 - INFO - Inference completed in 0.2101 seconds
2025-03-18 16:16:50,145 - ERROR - Error during inference: denormalize_from_range() got an unexpected keyword argument 'source_range'
2025-03-18 16:18:37,433 - INFO - Using device: cuda
2025-03-18 16:18:37,433 - INFO - Using best model checkpoint: ./checkpoints\best_model_simple.pth
2025-03-18 16:18:37,576 - INFO - Loaded model from epoch 2
2025-03-18 16:18:37,798 - INFO - Inference completed in 0.2115 seconds
2025-03-18 16:18:37,809 - INFO - Saved output image to output.png
2025-03-18 16:20:12,402 - INFO - Using device: cuda
2025-03-18 16:20:12,402 - INFO - Using best model checkpoint: ./checkpoints\best_model_simple.pth
2025-03-18 16:20:12,541 - INFO - Loaded model from epoch 9
2025-03-18 16:20:12,762 - INFO - Inference completed in 0.2111 seconds
2025-03-18 16:20:12,773 - INFO - Saved output image to output.png
2025-03-25 13:42:31,543 - WARNING - Automatic Mixed Precision not available. Using default precision.
2025-03-25 13:42:32,718 - INFO - Using device: cuda
2025-03-25 13:42:32,722 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 13:42:32,722 - INFO - Memory allocated: 0.00 GB
2025-03-25 13:42:32,722 - INFO - Memory reserved: 0.00 GB
2025-03-25 13:42:32,723 - ERROR - Error during inference: No checkpoint found for unet model in ./checkpoints
2025-03-25 14:00:51,832 - WARNING - Automatic Mixed Precision not available. Using default precision.
2025-03-25 14:00:52,985 - INFO - Using device: cuda
2025-03-25 14:00:52,987 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 14:00:52,987 - INFO - Memory allocated: 0.00 GB
2025-03-25 14:00:52,987 - INFO - Memory reserved: 0.00 GB
2025-03-25 14:00:52,987 - WARNING - AMP requested but not available. Falling back to full precision.
2025-03-25 14:00:52,987 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 14:00:53,811 - ERROR - Error loading model: Error(s) in loading state_dict for UNetSuperRes:
	size mismatch for inc.double_conv.0.weight: copying a param with shape torch.Size([32, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 1, 3, 3]).
	size mismatch for inc.double_conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3]).
	size mismatch for inc.double_conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for down1.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 64, 3, 3]).
	size mismatch for down1.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for down1.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down2.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 128, 3, 3]).
	size mismatch for down2.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3]).
	size mismatch for down2.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down3.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 256, 3, 3]).
	size mismatch for down3.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3]).
	size mismatch for down3.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down4.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([1024, 512, 3, 3]).
	size mismatch for down4.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1024, 1024, 3, 3]).
	size mismatch for down4.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for up1.up.weight: copying a param with shape torch.Size([512, 256, 2, 2]) from checkpoint, the shape in current model is torch.Size([1024, 512, 2, 2]).
	size mismatch for up1.up.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.0.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 3, 3]).
	size mismatch for up1.conv.double_conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3]).
	size mismatch for up1.conv.double_conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up2.up.weight: copying a param with shape torch.Size([256, 128, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2]).
	size mismatch for up2.up.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.0.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 3, 3]).
	size mismatch for up2.conv.double_conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3]).
	size mismatch for up2.conv.double_conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up3.up.weight: copying a param with shape torch.Size([128, 64, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2]).
	size mismatch for up3.up.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.0.weight: copying a param with shape torch.Size([64, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 3, 3]).
	size mismatch for up3.conv.double_conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for up3.conv.double_conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up4.up.weight: copying a param with shape torch.Size([64, 32, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2]).
	size mismatch for up4.up.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.0.weight: copying a param with shape torch.Size([32, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 128, 3, 3]).
	size mismatch for up4.conv.double_conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3]).
	size mismatch for up4.conv.double_conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for outc.conv.weight: copying a param with shape torch.Size([1, 32, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 64, 1, 1]).
2025-03-25 14:00:53,812 - ERROR - Error during inference: Error(s) in loading state_dict for UNetSuperRes:
	size mismatch for inc.double_conv.0.weight: copying a param with shape torch.Size([32, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 1, 3, 3]).
	size mismatch for inc.double_conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3]).
	size mismatch for inc.double_conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for down1.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 64, 3, 3]).
	size mismatch for down1.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for down1.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down2.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 128, 3, 3]).
	size mismatch for down2.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3]).
	size mismatch for down2.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down3.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 256, 3, 3]).
	size mismatch for down3.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3]).
	size mismatch for down3.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down4.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([1024, 512, 3, 3]).
	size mismatch for down4.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1024, 1024, 3, 3]).
	size mismatch for down4.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for up1.up.weight: copying a param with shape torch.Size([512, 256, 2, 2]) from checkpoint, the shape in current model is torch.Size([1024, 512, 2, 2]).
	size mismatch for up1.up.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.0.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 3, 3]).
	size mismatch for up1.conv.double_conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3]).
	size mismatch for up1.conv.double_conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up2.up.weight: copying a param with shape torch.Size([256, 128, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2]).
	size mismatch for up2.up.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.0.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 3, 3]).
	size mismatch for up2.conv.double_conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3]).
	size mismatch for up2.conv.double_conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up3.up.weight: copying a param with shape torch.Size([128, 64, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2]).
	size mismatch for up3.up.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.0.weight: copying a param with shape torch.Size([64, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 3, 3]).
	size mismatch for up3.conv.double_conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for up3.conv.double_conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up4.up.weight: copying a param with shape torch.Size([64, 32, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2]).
	size mismatch for up4.up.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.0.weight: copying a param with shape torch.Size([32, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 128, 3, 3]).
	size mismatch for up4.conv.double_conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3]).
	size mismatch for up4.conv.double_conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for outc.conv.weight: copying a param with shape torch.Size([1, 32, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 64, 1, 1]).
2025-03-25 14:08:46,085 - WARNING - Automatic Mixed Precision not available. Using default precision.
2025-03-25 14:08:47,244 - INFO - Using device: cuda
2025-03-25 14:08:47,246 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 14:08:47,247 - INFO - Memory allocated: 0.00 GB
2025-03-25 14:08:47,247 - INFO - Memory reserved: 0.00 GB
2025-03-25 14:08:47,247 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 14:08:48,071 - ERROR - Error loading model: Error(s) in loading state_dict for UNetSuperRes:
	size mismatch for inc.double_conv.0.weight: copying a param with shape torch.Size([32, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 1, 3, 3]).
	size mismatch for inc.double_conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3]).
	size mismatch for inc.double_conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for down1.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 64, 3, 3]).
	size mismatch for down1.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for down1.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down2.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 128, 3, 3]).
	size mismatch for down2.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3]).
	size mismatch for down2.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down3.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 256, 3, 3]).
	size mismatch for down3.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3]).
	size mismatch for down3.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down4.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([1024, 512, 3, 3]).
	size mismatch for down4.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1024, 1024, 3, 3]).
	size mismatch for down4.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for up1.up.weight: copying a param with shape torch.Size([512, 256, 2, 2]) from checkpoint, the shape in current model is torch.Size([1024, 512, 2, 2]).
	size mismatch for up1.up.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.0.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 3, 3]).
	size mismatch for up1.conv.double_conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3]).
	size mismatch for up1.conv.double_conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up2.up.weight: copying a param with shape torch.Size([256, 128, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2]).
	size mismatch for up2.up.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.0.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 3, 3]).
	size mismatch for up2.conv.double_conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3]).
	size mismatch for up2.conv.double_conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up3.up.weight: copying a param with shape torch.Size([128, 64, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2]).
	size mismatch for up3.up.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.0.weight: copying a param with shape torch.Size([64, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 3, 3]).
	size mismatch for up3.conv.double_conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for up3.conv.double_conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up4.up.weight: copying a param with shape torch.Size([64, 32, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2]).
	size mismatch for up4.up.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.0.weight: copying a param with shape torch.Size([32, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 128, 3, 3]).
	size mismatch for up4.conv.double_conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3]).
	size mismatch for up4.conv.double_conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for outc.conv.weight: copying a param with shape torch.Size([1, 32, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 64, 1, 1]).
2025-03-25 14:08:48,073 - ERROR - Error during inference: Error(s) in loading state_dict for UNetSuperRes:
	size mismatch for inc.double_conv.0.weight: copying a param with shape torch.Size([32, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 1, 3, 3]).
	size mismatch for inc.double_conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3]).
	size mismatch for inc.double_conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for inc.double_conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for down1.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 64, 3, 3]).
	size mismatch for down1.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for down1.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down1.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for down2.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 128, 3, 3]).
	size mismatch for down2.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3]).
	size mismatch for down2.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down2.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for down3.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 256, 3, 3]).
	size mismatch for down3.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3]).
	size mismatch for down3.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down3.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for down4.maxpool_conv.1.double_conv.0.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([1024, 512, 3, 3]).
	size mismatch for down4.maxpool_conv.1.double_conv.0.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.3.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1024, 1024, 3, 3]).
	size mismatch for down4.maxpool_conv.1.double_conv.3.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for down4.maxpool_conv.1.double_conv.4.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for up1.up.weight: copying a param with shape torch.Size([512, 256, 2, 2]) from checkpoint, the shape in current model is torch.Size([1024, 512, 2, 2]).
	size mismatch for up1.up.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.0.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 3, 3]).
	size mismatch for up1.conv.double_conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3]).
	size mismatch for up1.conv.double_conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up1.conv.double_conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for up2.up.weight: copying a param with shape torch.Size([256, 128, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2]).
	size mismatch for up2.up.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.0.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 3, 3]).
	size mismatch for up2.conv.double_conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3]).
	size mismatch for up2.conv.double_conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up2.conv.double_conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for up3.up.weight: copying a param with shape torch.Size([128, 64, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2]).
	size mismatch for up3.up.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.0.weight: copying a param with shape torch.Size([64, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 3, 3]).
	size mismatch for up3.conv.double_conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for up3.conv.double_conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up3.conv.double_conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for up4.up.weight: copying a param with shape torch.Size([64, 32, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2]).
	size mismatch for up4.up.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.0.weight: copying a param with shape torch.Size([32, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 128, 3, 3]).
	size mismatch for up4.conv.double_conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3]).
	size mismatch for up4.conv.double_conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for up4.conv.double_conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for outc.conv.weight: copying a param with shape torch.Size([1, 32, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 64, 1, 1]).
2025-03-25 14:23:00,765 - INFO - Using device: cuda
2025-03-25 14:23:00,771 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 14:23:00,772 - INFO - Memory allocated: 0.00 GB
2025-03-25 14:23:00,773 - INFO - Memory reserved: 0.00 GB
2025-03-25 14:23:00,773 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 14:23:00,986 - INFO - Loaded model from epoch 9
2025-03-25 14:23:01,195 - INFO - Enhanced image saved to output.png
2025-03-25 14:23:52,171 - ERROR - Error during inference: local variable 'metrics' referenced before assignment
2025-03-25 14:24:05,566 - INFO - Using device: cuda
2025-03-25 14:24:05,573 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 14:24:05,574 - INFO - Memory allocated: 0.00 GB
2025-03-25 14:24:05,574 - INFO - Memory reserved: 0.00 GB
2025-03-25 14:24:05,575 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 14:24:05,575 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 14:24:05,786 - INFO - Loaded model from epoch 9
2025-03-25 14:24:06,017 - INFO - Enhanced image saved to output.png
2025-03-25 14:24:31,790 - ERROR - Error during inference: local variable 'metrics' referenced before assignment
2025-03-25 14:24:49,320 - INFO - Using device: cuda
2025-03-25 14:24:49,326 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 14:24:49,327 - INFO - Memory allocated: 0.00 GB
2025-03-25 14:24:49,328 - INFO - Memory reserved: 0.00 GB
2025-03-25 14:24:49,328 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 14:24:49,328 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 14:24:49,539 - INFO - Loaded model from epoch 9
2025-03-25 14:24:49,797 - INFO - SSIM: 0.7974
2025-03-25 14:24:49,797 - INFO - RMSE: 0.1304
2025-03-25 14:24:49,798 - INFO - MAE: 0.0978
2025-03-25 14:24:49,805 - INFO - Enhanced image saved to output.png
2025-03-25 14:25:32,534 - INFO - Inference completed successfully!
2025-03-25 14:32:47,407 - INFO - Using device: cuda
2025-03-25 14:32:47,413 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 14:32:47,414 - INFO - Memory allocated: 0.00 GB
2025-03-25 14:32:47,414 - INFO - Memory reserved: 0.00 GB
2025-03-25 14:32:47,414 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 14:32:47,415 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 14:32:47,633 - INFO - Loaded model from epoch 4
2025-03-25 14:32:47,900 - INFO - SSIM: 0.2708
2025-03-25 14:32:47,900 - INFO - RMSE: 0.4008
2025-03-25 14:32:47,900 - INFO - MAE: 0.2908
2025-03-25 14:32:47,906 - INFO - Enhanced image saved to output.png
2025-03-25 14:33:33,222 - INFO - Inference completed successfully!
2025-03-25 14:47:42,785 - INFO - Using device: cuda
2025-03-25 14:47:42,792 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 14:47:42,792 - INFO - Memory allocated: 0.00 GB
2025-03-25 14:47:42,793 - INFO - Memory reserved: 0.00 GB
2025-03-25 14:47:42,793 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 14:47:42,793 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 14:47:43,028 - INFO - Loaded model from epoch 9
2025-03-25 14:47:43,319 - INFO - SSIM: 0.3869
2025-03-25 14:47:43,320 - INFO - RMSE: 0.3738
2025-03-25 14:47:43,320 - INFO - MAE: 0.2597
2025-03-25 14:47:43,328 - INFO - Enhanced image saved to output.png
2025-03-25 14:49:45,467 - INFO - Inference completed successfully!
2025-03-25 15:20:03,173 - INFO - Using device: cuda
2025-03-25 15:20:03,180 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 15:20:03,181 - INFO - Memory allocated: 0.00 GB
2025-03-25 15:20:03,182 - INFO - Memory reserved: 0.00 GB
2025-03-25 15:20:03,182 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 15:20:03,182 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 15:20:03,424 - INFO - Loaded model from epoch 9
2025-03-25 15:20:03,718 - INFO - SSIM: 0.8282
2025-03-25 15:20:03,719 - INFO - RMSE: 0.1701
2025-03-25 15:20:03,719 - INFO - MAE: 0.1201
2025-03-25 15:20:03,730 - INFO - Enhanced image saved to output.png
2025-03-25 15:20:17,171 - INFO - Inference completed successfully!
2025-03-25 15:31:10,400 - INFO - Using device: cuda
2025-03-25 15:31:10,407 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 15:31:10,407 - INFO - Memory allocated: 0.00 GB
2025-03-25 15:31:10,408 - INFO - Memory reserved: 0.00 GB
2025-03-25 15:31:10,408 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 15:31:10,408 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 15:31:10,608 - INFO - Loaded model from epoch 9
2025-03-25 15:31:10,835 - INFO - Enhanced image saved to output.png
2025-03-25 15:31:19,429 - ERROR - Error during inference: local variable 'metrics' referenced before assignment
2025-03-25 15:38:42,869 - INFO - Using device: cuda
2025-03-25 15:38:42,876 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 15:38:42,876 - INFO - Memory allocated: 0.00 GB
2025-03-25 15:38:42,877 - INFO - Memory reserved: 0.00 GB
2025-03-25 15:38:42,877 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 15:38:42,877 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 15:38:43,103 - INFO - Loaded model from epoch 40
2025-03-25 15:38:43,354 - INFO - SSIM: 0.9214
2025-03-25 15:38:43,355 - INFO - RMSE: 0.0703
2025-03-25 15:38:43,355 - INFO - MAE: 0.0380
2025-03-25 15:38:43,364 - INFO - Enhanced image saved to output.png
2025-03-25 15:51:36,225 - INFO - Using device: cuda
2025-03-25 15:51:36,231 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 15:51:36,231 - INFO - Memory allocated: 0.00 GB
2025-03-25 15:51:36,232 - INFO - Memory reserved: 0.00 GB
2025-03-25 15:51:36,232 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 15:51:36,233 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 15:51:36,442 - INFO - Loaded model from epoch 48
2025-03-25 15:51:36,699 - INFO - SSIM: 0.9209
2025-03-25 15:51:36,700 - INFO - RMSE: 0.0664
2025-03-25 15:51:36,700 - INFO - MAE: 0.0375
2025-03-25 15:51:36,709 - INFO - Enhanced image saved to output.png
2025-03-25 15:52:01,914 - INFO - Inference completed successfully!
2025-03-25 16:02:27,853 - INFO - Using device: cuda
2025-03-25 16:02:27,860 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:02:27,860 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:02:27,861 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:02:27,861 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:02:27,861 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 16:02:28,072 - INFO - Loaded model from epoch 44
2025-03-25 16:02:28,338 - INFO - SSIM: 0.7861
2025-03-25 16:02:28,338 - INFO - RMSE: 0.4751
2025-03-25 16:02:28,338 - INFO - MAE: 0.2248
2025-03-25 16:02:28,346 - INFO - Enhanced image saved to output.png
2025-03-25 16:04:51,075 - INFO - Inference completed successfully!
2025-03-25 16:13:58,276 - INFO - Using device: cuda
2025-03-25 16:13:58,282 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:13:58,282 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:13:58,283 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:13:58,284 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:13:58,284 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 16:13:58,498 - INFO - Loaded model from epoch 17
2025-03-25 16:13:58,765 - INFO - SSIM: 0.9438
2025-03-25 16:13:58,765 - INFO - RMSE: 0.0314
2025-03-25 16:13:58,766 - INFO - MAE: 0.0193
2025-03-25 16:13:58,770 - INFO - Enhanced image saved to output.png
2025-03-25 16:26:56,287 - INFO - Using device: cuda
2025-03-25 16:26:56,293 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:26:56,294 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:26:56,295 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:26:56,295 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:26:56,295 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 16:26:56,500 - INFO - Loaded model from epoch 53
2025-03-25 16:26:56,760 - INFO - SSIM: 0.9666
2025-03-25 16:26:56,761 - INFO - RMSE: 0.0250
2025-03-25 16:26:56,761 - INFO - MAE: 0.0167
2025-03-25 16:26:56,767 - INFO - Enhanced image saved to output.png
2025-03-25 16:28:29,837 - INFO - Inference completed successfully!
2025-03-25 16:28:48,134 - INFO - Using device: cuda
2025-03-25 16:28:48,144 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:28:48,144 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:28:48,145 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:28:48,146 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:28:48,147 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 16:28:48,425 - INFO - Loaded model from epoch 53
2025-03-25 16:28:48,783 - ERROR - Error calculating metrics: The size of tensor a (644) must match the size of tensor b (320) at non-singleton dimension 3
2025-03-25 16:28:48,846 - INFO - Enhanced image saved to output.png
2025-03-25 16:29:00,030 - ERROR - Error during inference: operands could not be broadcast together with shapes (682,644) (320,320) 
2025-03-25 16:30:37,203 - INFO - Using device: cuda
2025-03-25 16:30:37,211 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:30:37,212 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:30:37,213 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:30:37,213 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:30:37,214 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 16:30:37,477 - INFO - Loaded model from epoch 53
2025-03-25 16:30:37,807 - ERROR - Error calculating metrics: The size of tensor a (240) must match the size of tensor b (320) at non-singleton dimension 2
2025-03-25 16:30:37,816 - INFO - Enhanced image saved to output.png
2025-03-25 16:30:47,355 - ERROR - Error during inference: operands could not be broadcast together with shapes (240,320) (320,320) 
2025-03-25 16:33:59,674 - INFO - Using device: cuda
2025-03-25 16:33:59,684 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:33:59,685 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:33:59,686 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:33:59,687 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:33:59,687 - INFO - Using best model checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 16:33:59,967 - INFO - Loaded model from epoch 53
2025-03-25 16:34:00,297 - ERROR - Error calculating metrics: The size of tensor a (240) must match the size of tensor b (320) at non-singleton dimension 2
2025-03-25 16:34:00,306 - INFO - Enhanced image saved to output.png
2025-03-25 16:35:16,634 - ERROR - Error during inference: operands could not be broadcast together with shapes (240,320) (320,320) 
2025-03-25 16:41:55,235 - INFO - Using device: cuda
2025-03-25 16:41:55,241 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:41:55,242 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:41:55,242 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:41:55,243 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:41:55,243 - INFO - Using specified checkpoint: ./checkpoints\final_model_unet.pth
2025-03-25 16:41:55,453 - INFO - Loaded model from epoch 63
2025-03-25 16:41:55,677 - INFO - Enhanced image saved to output.png
2025-03-25 16:42:31,914 - ERROR - Error during inference: local variable 'metrics' referenced before assignment
2025-03-25 16:42:47,311 - INFO - Using device: cuda
2025-03-25 16:42:47,317 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:42:47,318 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:42:47,319 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:42:47,319 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:42:47,319 - INFO - Using specified checkpoint: ./checkpoints\final_model_unet.pth
2025-03-25 16:42:47,520 - INFO - Loaded model from epoch 63
2025-03-25 16:42:47,777 - INFO - SSIM: 0.9686
2025-03-25 16:42:47,778 - INFO - RMSE: 0.0230
2025-03-25 16:42:47,778 - INFO - MAE: 0.0130
2025-03-25 16:42:47,784 - INFO - Enhanced image saved to output.png
2025-03-25 16:44:43,616 - INFO - Inference completed successfully!
2025-03-25 16:44:54,491 - INFO - Using device: cuda
2025-03-25 16:44:54,498 - INFO - GPU: NVIDIA GeForce RTX 3050 Ti Laptop GPU
2025-03-25 16:44:54,498 - INFO - Memory allocated: 0.00 GB
2025-03-25 16:44:54,499 - INFO - Memory reserved: 0.00 GB
2025-03-25 16:44:54,500 - INFO - Using Automatic Mixed Precision (AMP) for inference.
2025-03-25 16:44:54,500 - INFO - Using specified checkpoint: ./checkpoints\best_model_unet.pth
2025-03-25 16:44:54,722 - INFO - Loaded model from epoch 53
2025-03-25 16:44:55,016 - INFO - SSIM: 0.9666
2025-03-25 16:44:55,017 - INFO - RMSE: 0.0250
2025-03-25 16:44:55,017 - INFO - MAE: 0.0167
2025-03-25 16:44:55,023 - INFO - Enhanced image saved to output.png
2025-03-25 16:45:22,550 - INFO - Inference completed successfully!
